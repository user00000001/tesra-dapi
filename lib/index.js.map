{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"window-post-message-proxy\"","webpack:///external \"crypto-js\"","webpack:///external \"webextension-polyfill-ts\"","webpack:///external \"promise-timeout\"","webpack:///external \"base-x\"","webpack:///external \"typedarray-to-buffer\"","webpack:///./src/rpc/tunnel.ts","webpack:///./src/rpc/rpc.ts","webpack:///./src/client/proxy.ts","webpack:///./src/client/asset.ts","webpack:///./src/client/identity.ts","webpack:///./src/client/message.ts","webpack:///./src/client/network.ts","webpack:///./src/client/provider.ts","webpack:///./src/client/smartContract.ts","webpack:///./src/client/stateChannel.ts","webpack:///./src/client/utils.ts","webpack:///./src/client/index.ts","webpack:///./src/provider.ts","webpack:///./src/api/types.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","Tunnel","[object Object]","options","this","source","destination","postMessage","messageHandler","logMessages","undefined","addListener","Error","onMessage","msg","request","payload","type","console","warn","JSON","stringify","response","error","sender","promise","caller","id","url","Promise","resolve","e","reject","then","result","catch","rpc_Rpc","tunnel","methods","Map","method","params","send","set","windowProxy","rpc","registerClient","logWarnings","external_window_post_message_proxy_","target","suppressWarnings","window","async","assetApi","getAccount","getPublicKey","args","identityApi","getIdentity","getDDO","addAttributes","removeAttribute","messageApi","signMessageHash","verifyMessageHash","signMessage","verifyMessage","networkApi","getNodeCount","getBlockHeight","getMerkleProof","getStorage","getAllowance","getBlock","getTransaction","getNetwork","getBalance","isConnected","getUnboundTsg","getContract","getSmartCodeEvent","getBlockHeightByTxHash","getBlockHash","getBlockTxsByHeight","getGasPrice","getGrantTsg","getMempoolTxCount","getMempoolTxState","getVersion","providerApi","getProvider","external_promise_timeout_","smartContractApi","invoke","invokeRead","deploy","invokeWasm","invokeWasmRead","stateChannelApi","login","sign","typedarrayToBuffer","base58","external_base_x_","base58ToHex","base58Encoded","hexEncoded","ab2hexstring","decode","substr","hexToBase58","ADDR_VERSION","data","hash","sha256","checksum","slice","buffer","Uint8Array","hexstring2ab","encode","hex","external_crypto_js_","Hex","parse","toString","str","length","push","parseInt","substring","arr","uint8Arr","byteLength","api","asset","identity","message","network","provider","smartContract","stateChannel","utils","strToHex","buf","ArrayBuffer","bufView","strLen","charCodeAt","str2ab","String","fromCharCode","apply","addressToHex","hexToAddress","_","provider_rpc","registerContentProxy","addHandler","handle","external_webextension_polyfill_ts_","runtime","sendMessage","test","registerProvider","checkedRegister","register","TransactionType","VmType","__webpack_exports__","client_namespaceObject","src_provider_namespaceObject"],"mappings":"2BACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,mBClFAhC,EAAAD,QAAAkC,QAAA,4CCAAjC,EAAAD,QAAAkC,QAAA,4BCAAjC,EAAAD,QAAAkC,QAAA,2CCAAjC,EAAAD,QAAAkC,QAAA,kCCAAjC,EAAAD,QAAAkC,QAAA,yBCAAjC,EAAAD,QAAAkC,QAAA,yRCsCM,MAAOC,EAQXC,YAAYC,GAOV,GANAC,KAAKC,OAASF,EAAQE,OACtBD,KAAKE,YAAcH,EAAQG,YAC3BF,KAAKG,YAAcJ,EAAQI,YAC3BH,KAAKI,eAAiBL,EAAQK,eAC9BJ,KAAKK,YAAcN,EAAQM,iBAECC,IAAxBP,EAAQQ,kBAAqDD,IAAxBP,EAAQI,YAC/C,MAAM,IAAIK,MAAM,sDACX,QAA4BF,IAAxBP,EAAQQ,YAA2B,CAC5C,QAA+BD,IAA3BP,EAAQK,eACV,MAAM,IAAII,MAAM,4DAGlBT,EAAQQ,YAAYP,KAAKS,UAAUrB,KAAKY,QAI5CF,WAAmBY,GACjB,MAAMC,EAAmB,CACvBT,YAAaF,KAAKE,YAClBU,QAASF,EACTT,OAAQD,KAAKC,OACbY,KAAM,WAGR,QAAyBP,IAArBN,KAAKG,YACP,MAAM,IAAIK,MAAM,kCAGdR,KAAKK,aAGPS,QAAQC,iBAAiBf,KAAKC,mBAAoBe,KAAKC,UAAUP,EAAK,KAAM,OAG9E,MAAMQ,QAAmClB,KAAKG,YAAYQ,GAE1D,QAAuBL,IAAnBY,EAASC,MACX,MAAM,IAAIX,MAAMU,EAASC,OAEzB,OAAOD,EAASN,QAIZd,UAAUa,EAAkBS,GAClC,GAAIT,EAAQT,cAAgBF,KAAKC,QAAUU,EAAQV,SAAWD,KAAKE,YAAa,CAC9E,IAAImB,EAEJ,IACE,QAA4Bf,IAAxBN,KAAKI,eACP,MAAM,IAAII,MAAM,qCAGdR,KAAKK,aAGPS,QAAQC,iBAAiBf,KAAKC,qBAAsBe,KAAKC,UAAUN,EAAQC,QAAS,KAAM,OAG5F,MAAMU,EAAiB,CACrBC,GAAIH,EAAOG,GACXC,IAAKJ,EAAOI,KAGRN,EAAWlB,KAAKI,eAAeO,EAAQC,QAASU,GACtDD,EAAUI,QAAQC,QAAQR,GAC1B,MAAOS,GACPN,EAAUI,QAAQG,OAAOD,GAG3B,OAAON,EACJQ,KACEC,IAAD,CAEI5B,YAAaS,EAAQV,OACrBW,QAASkB,EACT7B,OAAQU,EAAQT,YAChBW,KAAM,aAGXkB,MACEZ,IAAD,CAEIjB,YAAaS,EAAQV,OACrBkB,QACAlB,OAAQU,EAAQT,YAChBW,KAAM,eC5Hd,MAAOmB,EAIXlC,YAAYC,GACVA,EAAQK,eAAiBJ,KAAKI,eAAehB,KAAKY,MAElDA,KAAKiC,OAAS,IAAIpC,EAAOE,GACzBC,KAAKkC,QAAU,IAAIC,IAGrBrC,KAAmBsC,KAAmBC,GACpC,MAAM3B,EAAM,CACV0B,SACAC,UAGF,OAAOrC,KAAKiC,OAAOK,KAAa5B,GAGlCZ,SAAS3B,EAAciE,GACrBpC,KAAKkC,QAAQK,IAAIpE,EAAMiE,GAGjBtC,eAAeY,EAAqBY,GAC1C,MAAMc,EAASpC,KAAKkC,QAAQzD,IAAIiC,EAAI0B,QAEpC,QAAe9B,IAAX8B,EACF,MAAM,IAAI5B,MAAM,6BAA+BE,EAAI0B,QAGrD,OAAOA,EAAOrE,KAAKuD,KAAWZ,EAAI2B,SCrCtC,IAAIG,EACAC,EAEE,SAAUC,GAAerC,YAC7BA,GAAc,EADesC,YAE7BA,GAAc,IAKdH,EAAc,IAAII,EAAA,uBAAuB,CACvCzE,KAAM,OACN0E,OAAQ,iBACRxC,cACAyC,kBAAmBH,IAErBF,EAAM,IAAIT,EAAI,CACZ/B,OAAQ,OACRC,YAAa,aACbG,aAAa,EACbF,YAAaqC,EAAYrC,YAAYf,KAAKoD,EAAaO,UAIpDC,eAAejF,EAAaqE,KAAmBC,GACpD,OAAOI,EAAI1E,KAAaqE,KAAWC,GCzB9B,MAAMY,EAAqB,CAChCC,WAAA,IACSnF,EAAa,oBAGtBoF,aAAA,IACSpF,EAAa,sBAGtBuE,KAAKc,GACIrF,EAAa,aAAcqF,ICTzBC,EAA2B,CACtCC,YAAA,IACSvF,EAAa,wBAEtBwF,OAAOH,GACErF,EAAe,kBAAmBqF,GAE3CI,cAAcJ,GACLrF,EAAW,yBAA0BqF,GAE9CK,gBAAgBL,GACPrF,EAAW,2BAA4BqF,ICXrCM,EAAyB,CACpCC,gBAAgBP,GACPrF,EAAgB,0BAA2BqF,GAEpDQ,kBAAkBR,GACTrF,EAAc,4BAA6BqF,GAGpDS,YAAYT,GACHrF,EAAgB,sBAAuBqF,GAEhDU,cAAcV,GACLrF,EAAc,wBAAyBqF,ICZrCW,EAAyB,CACpCC,aAAA,IACSjG,EAAa,wBAGtBkG,eAAA,IACSlG,EAAa,0BAGtBmG,eAAed,GACNrF,EAAkB,yBAA0BqF,GAGrDe,WAAWf,GACFrF,EAAa,qBAAsBqF,GAG5CgB,aAAahB,GACJrF,EAAa,uBAAwBqF,GAG9CiB,SAASjB,GACArF,EAAY,mBAAoBqF,GAGzCkB,eAAelB,GACNrF,EAAkB,yBAA0BqF,GAGrDmB,WAAA,IACSxG,EAAc,sBAGvByG,WAAWpB,GACFrF,EAAc,qBAAsBqF,GAG7CqB,YAAA,IACS1G,EAAc,uBAGvB2G,cAActB,GACLrF,EAAa,wBAAyBqF,GAE/CuB,YAAYvB,GACHrF,EAAe,sBAAuBqF,GAE/CwB,kBAAkBxB,GACTrF,EAAU,4BAA6BqF,GAEhDyB,uBAAuBzB,GACdrF,EAAa,iCAAkCqF,GAGxD0B,aAAa1B,GACJrF,EAAa,uBAAwBqF,GAE9C2B,oBAAoB3B,GACXrF,EAAsB,8BAA+BqF,GAE9D4B,YAAA,IACSjH,EAAe,uBAExBkH,YAAY7B,GACHrF,EAAa,sBAAuBqF,GAE7C8B,kBAAA,IACSnH,EAAe,6BAExBoH,kBAAkB/B,GACTrF,EAAU,4BAA6BqF,GAEhDgC,WAAA,IACSrH,EAAa,kCCxEjB,MAAMsH,EAA2B,CACtCC,YAAA,IACShH,OAAAiH,EAAA,QAAAjH,CAAQP,EAAe,wBAAyB,KAAMgE,MAAM,IAAMN,QAAQG,OAAO,iBCH/E4D,EAAqC,CAChDC,OAAOrC,GACErF,EAAe,uBAAwBqF,GAGhDsC,WAAWtC,GACFrF,EAAW,2BAA4BqF,GAGhDuC,OAAOvC,GACErF,EAAW,uBAAwBqF,GAE5CwC,WAAWxC,GACFrF,EAAe,2BAA4BqF,GAGpDyC,eAAezC,GACNrF,EAAW,+BAAgCqF,ICjBzC0C,EAAmC,CAC9CC,MAAA,IACShI,EAAa,sBAGtBiI,KAAK5C,GACIrF,EAAgB,oBAAqBqF,sBCNhD,MAAM6C,EAAqBzI,EAAQ,GAK7B0I,EAASC,EAAM,8DA6BrB,SAASC,EAAYC,GACnB,MACMC,EAAaC,EADHL,EAAOM,OAAOH,IACWI,OAAO,EAAG,IAEnD,GAAIJ,IAAkBK,EAAYJ,GAChC,MAAM,IAAI9F,MAAM,gDAElB,OAAO8F,EAGT,MAAMK,EAAe,KAErB,SAASD,EAAYJ,GACnB,MAAMM,EAAOD,EAAeL,EAEtBO,EAAOC,EAAOF,GAEdG,EADQD,EAAOD,GACEG,MAAM,EAAG,GAI1BC,EAAShB,EAAmB,IAAIiB,WAAWC,EAFnCP,EAAOG,KAIrB,OAAOb,EAAOkB,OAAOH,GAGvB,SAASH,EAAOF,GACd,MAAMS,EAAMC,EAAA,IAAaC,IAAIC,MAAMZ,GAEnC,OADYU,EAAA,OAAgBD,GAAKI,WAInC,SAASN,EAAaO,GACpB,MAAM5F,EAAS,GAEf,KAAO4F,EAAIC,QAAU,GACnB7F,EAAO8F,KAAKC,SAASH,EAAII,UAAU,EAAG,GAAI,KAC1CJ,EAAMA,EAAII,UAAU,EAAGJ,EAAIC,QAG7B,OAAO7F,EAGT,SAASyE,EAAawB,GACpB,IAAIjG,EAAiB,GACrB,MAAMkG,EAAuB,IAAId,WAAWa,GAC5C,IAAK,IAAInK,EAAI,EAAGA,EAAIoK,EAASC,WAAYrK,IAAK,CAC5C,IAAI8J,EAAMM,EAASpK,GAAG6J,SAAS,IAE/B3F,GADA4F,EAAqB,IAAfA,EAAIC,OAAe,KAAsB,IAAfD,EAAIC,OAAe,IAAMD,EAAMA,EAGjE,OAAO5F,EC9ET,MAAMoG,EAAY,CAChBC,MAAAlF,EACAmF,SAAA/E,EACAgF,QAAA3E,EACA4E,QAAAvE,EACAwE,SAAAlD,EACAmD,cAAAhD,EACAiD,aAAA3C,EACA4C,MDRgC,CAChCC,SAASjB,GACAnB,EAmFL,SAAiBmB,GACrB,MAAMkB,EAAM,IAAIC,YAAYnB,EAAIC,QAC1BmB,EAAU,IAAI5B,WAAW0B,GAC/B,IAAK,IAAIhL,EAAI,EAAGmL,EAASrB,EAAIC,OAAQ/J,EAAImL,EAAQnL,IAC/CkL,EAAQlL,GAAK8J,EAAIsB,WAAWpL,GAE9B,OAAOgL,EAzFeK,CAAOvB,IAG7B5H,SAASuH,GACP,OA2EYuB,EA3EEzB,EAAaE,GA4EtB6B,OAAOC,aAAaC,MAAM,KAAM,IAAIlC,WAAW0B,IADxD,IAAgBA,GAxEdS,aAAa3B,GACJtB,EAAYsB,GAGrB4B,aAAa5B,GACJhB,EAAYgB,GAGrB5H,UAAU4H,GACR,IAEE,OADAtB,EAAYsB,IACL,EACP,MAAO6B,GACP,OAAO,iBE5Bb,IAAIC,EAEE,SAAUC,GAAqBpJ,YACnCA,GAAc,EADqBsC,YAEnCA,GAAc,IAKiB,IAAIC,EAAA,uBAAuB,CACxDvC,cACAyC,kBAAmBH,EACnBxE,KAAM,iBACN0E,OAAQ,SAGa6G,WAAW,CAChCC,OAASjJ,GAAQkJ,EAAA,QAAQC,QAAQC,YAAYpJ,GAC7CqJ,KAAOrJ,GAAqB,YAAbA,EAAIG,MAAqC,SAAfH,EAAIT,SAI3C,SAAU+J,GAAiBzB,SAAEA,EAAFlI,YAAYA,IAQ3C,SAAS4J,EAAgB9L,EAAciE,GACrC,QAAe9B,IAAX8B,EACF,MAAM,IAAI5B,MAAM,oCAAsCrC,GAGxDqL,EAAIU,SAAS/L,EAAMiE,GAZrBoH,EAAM,IAAIxH,EAAI,CACZ/B,OAAQ,aACRC,YAAa,OACbG,cACAE,YAAaqJ,EAAA,QAAQC,QAAQpJ,UAAUF,cAWzC0J,EAAgB,mBAAoB1B,EAASJ,MAAMjF,YACnD+G,EAAgB,qBAAsB1B,EAASJ,MAAMhF,cACrD8G,EAAgB,aAAc1B,EAASJ,MAAM7F,MAE7C2H,EAAgB,uBAAwB1B,EAASH,SAAS9E,aAC1D2G,EAAgB,kBAAmB1B,EAASH,SAAS7E,QACrD0G,EAAgB,yBAA0B1B,EAASH,SAAS5E,eAC5DyG,EAAgB,2BAA4B1B,EAASH,SAAS3E,iBAE9DwG,EAAgB,sBAAuB1B,EAASF,QAAQxE,aACxDoG,EAAgB,wBAAyB1B,EAASF,QAAQvE,eAC1DmG,EAAgB,0BAA2B1B,EAASF,QAAQ1E,iBAC5DsG,EAAgB,4BAA6B1B,EAASF,QAAQzE,mBAE9DqG,EAAgB,uBAAwB1B,EAASD,QAAQlE,cACzD6F,EAAgB,qBAAsB1B,EAASD,QAAQ9D,YACvDyF,EAAgB,mBAAoB1B,EAASD,QAAQjE,UACrD4F,EAAgB,yBAA0B1B,EAASD,QAAQrE,gBAC3DgG,EAAgB,yBAA0B1B,EAASD,QAAQpE,gBAC3D+F,EAAgB,qBAAsB1B,EAASD,QAAQ/D,YACvD0F,EAAgB,uBAAwB1B,EAASD,QAAQtE,cACzDiG,EAAgB,qBAAsB1B,EAASD,QAAQnE,YACvD8F,EAAgB,yBAA0B1B,EAASD,QAAQhE,gBAC3D2F,EAAgB,sBAAuB1B,EAASD,QAAQ7D,aAExDwF,EAAgB,wBAAyB1B,EAASD,QAAQ5D,eAC1DuF,EAAgB,sBAAuB1B,EAASD,QAAQ3D,aACxDsF,EAAgB,4BAA6B1B,EAASD,QAAQ1D,mBAC9DqF,EAAgB,iCAAkC1B,EAASD,QAAQzD,wBACnEoF,EAAgB,uBAAwB1B,EAASD,QAAQxD,cACzDmF,EAAgB,8BAA+B1B,EAASD,QAAQvD,qBAChEkF,EAAgB,sBAAuB1B,EAASD,QAAQtD,aACxDiF,EAAgB,sBAAuB1B,EAASD,QAAQrD,aACxDgF,EAAgB,4BAA6B1B,EAASD,QAAQpD,mBAC9D+E,EAAgB,4BAA6B1B,EAASD,QAAQnD,mBAC9D8E,EAAgB,qBAAsB1B,EAASD,QAAQlD,YAEvD6E,EAAgB,uBAAwB1B,EAASC,cAAc/C,QAC/DwE,EAAgB,2BAA4B1B,EAASC,cAAc9C,YACnEuE,EAAgB,uBAAwB1B,EAASC,cAAc7C,QAC/DsE,EAAgB,2BAA4B1B,EAASC,cAAc5C,YACnEqE,EAAgB,+BAAgC1B,EAASC,cAAc3C,gBAEvEoE,EAAgB,uBAAwB1B,EAASA,SAASjD,aAE1D2E,EAAgB,qBAAsB1B,EAASE,aAAa1C,OAC5DkE,EAAgB,oBAAqB1B,EAASE,aAAazC,MCrF7D,IAAYmE,EASAC,GATZ,SAAYD,GACVA,IAAA,2BACAA,IAAA,iBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,2BACAA,IAAA,eANF,CAAYA,MAAe,KAS3B,SAAYC,GACRA,IAAA,2BACAA,IAAA,6BAFJ,CAAYA,MAAM,KCblB5M,EAAAU,EAAAmM,EAAA,oCAAAF,IAAA3M,EAAAU,EAAAmM,EAAA,2BAAAD,IAAA5M,EAAAU,EAAAmM,EAAA,2BAAAC,IAAA9M,EAAAU,EAAAmM,EAAA,6BAAAE,IAAA/M,EAAAU,EAAAmM,EAAA,2BAAAxK,IAAArC,EAAAU,EAAAmM,EAAA,wBAAArI","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = require(\"window-post-message-proxy\");","module.exports = require(\"crypto-js\");","module.exports = require(\"webextension-polyfill-ts\");","module.exports = require(\"promise-timeout\");","module.exports = require(\"base-x\");","module.exports = require(\"typedarray-to-buffer\");","import { Runtime } from 'webextension-polyfill-ts';\n\nexport type CallbackType = (msg: Request) => Promise<Response> | void;\nexport type PostMessageType = (msg: Request) => Promise<Response>;\n\nexport type AddListenerType = (callback: CallbackType) => void;\n\nexport interface Caller {\n  url?: string;\n  id?: string;\n}\n\nexport type MessageHandlerType = (msg: any, caller: Caller) => any;\n\nexport interface Request {\n  payload: any;\n  source: string;\n  destination: string;\n  type: 'dAPI.js';\n}\n\nexport interface Response<TYPE = any> {\n  destination: string;\n  error?: any;\n  payload?: TYPE;\n  source: string;\n  type: 'dAPI.js';\n}\n\nexport interface TunnelOptions {\n  source: string;\n  destination: string;\n  postMessage?: PostMessageType;\n  addListener?: AddListenerType;\n  messageHandler?: MessageHandlerType;\n  logMessages?: boolean;\n}\n\nexport class Tunnel<T = any> {\n  private source: string;\n  private destination: string;\n  private postMessage?: PostMessageType;\n  private messageHandler?: MessageHandlerType;\n\n  private logMessages?: boolean;\n\n  constructor(options: TunnelOptions) {\n    this.source = options.source;\n    this.destination = options.destination;\n    this.postMessage = options.postMessage;\n    this.messageHandler = options.messageHandler;\n    this.logMessages = options.logMessages;\n\n    if (options.addListener === undefined && options.postMessage === undefined) {\n      throw new Error('Either addListener or postMessage must be present.');\n    } else if (options.addListener !== undefined) {\n      if (options.messageHandler === undefined) {\n        throw new Error('MessageHandler must be specified if addListener present.');\n      }\n\n      options.addListener(this.onMessage.bind(this));\n    }\n  }\n\n  async send<RESULT>(msg: T): Promise<RESULT> {\n    const request: Request = {\n      destination: this.destination,\n      payload: msg,\n      source: this.source,\n      type: 'dAPI.js'\n    };\n\n    if (this.postMessage === undefined) {\n      throw new Error('PostMessage was not specified.');\n    }\n\n    if (this.logMessages) {\n      // tslint:disable-next-line:max-line-length\n      // tslint:disable-next-line:no-console\n      console.warn(`Tunnel: (${this.source}): Sending`, JSON.stringify(msg, null, '  '));\n    }\n\n    const response: Response<RESULT> = await this.postMessage(request);\n\n    if (response.error !== undefined) {\n      throw new Error(response.error);\n    } else {\n      return response.payload as RESULT;\n    }\n  }\n\n  private onMessage(request: Request, sender: Runtime.MessageSender): Promise<Response> | void {\n    if (request.destination === this.source && request.source === this.destination) {\n      let promise: Promise<any>;\n\n      try {\n        if (this.messageHandler === undefined) {\n          throw new Error('MessageHandler was not specified.');\n        }\n\n        if (this.logMessages) {\n          // tslint:disable-next-line:max-line-length\n          // tslint:disable-next-line:no-console\n          console.warn(`Tunnel: (${this.source}): Receiving`, JSON.stringify(request.payload, null, '  '));\n        }\n\n        const caller: Caller = {\n          id: sender.id,\n          url: sender.url\n        };\n\n        const response = this.messageHandler(request.payload, caller);\n        promise = Promise.resolve(response);\n      } catch (e) {\n        promise = Promise.reject(e);\n      }\n\n      return promise\n        .then(\n          (result) =>\n            ({\n              destination: request.source,\n              payload: result,\n              source: request.destination,\n              type: 'dAPI.js'\n            } as Response)\n        )\n        .catch(\n          (error) =>\n            ({\n              destination: request.source,\n              error,\n              source: request.destination,\n              type: 'dAPI.js'\n            } as Response)\n        );\n    }\n  }\n}\n","import { Caller, Tunnel, TunnelOptions } from './tunnel';\n\nexport type MethodType = (...params: any[]) => any;\n\ninterface MethodCallType {\n  method: string;\n  params: any[];\n}\n\nexport class Rpc {\n  private tunnel: Tunnel<MethodCallType>;\n  private methods: Map<string, MethodType>;\n\n  constructor(options: TunnelOptions) {\n    options.messageHandler = this.messageHandler.bind(this);\n\n    this.tunnel = new Tunnel(options);\n    this.methods = new Map();\n  }\n\n  call<RESULT = any>(method: string, ...params: any[]) {\n    const msg = {\n      method,\n      params\n    };\n\n    return this.tunnel.send<RESULT>(msg);\n  }\n\n  register(name: string, method: MethodType) {\n    this.methods.set(name, method);\n  }\n\n  private messageHandler(msg: MethodCallType, caller: Caller) {\n    const method = this.methods.get(msg.method);\n\n    if (method === undefined) {\n      throw new Error('Unregistered method call: ' + msg.method);\n    }\n\n    return method.call(caller, ...msg.params);\n  }\n}\n","import { WindowPostMessageProxy } from 'window-post-message-proxy';\nimport { Rpc } from '../rpc/rpc';\n\nlet windowProxy: WindowPostMessageProxy;\nlet rpc: Rpc;\n\nexport function registerClient({\n  logMessages = false,\n  logWarnings = false\n}: {\n  logMessages?: boolean;\n  logWarnings?: boolean;\n}) {\n  windowProxy = new WindowPostMessageProxy({\n    name: 'page',\n    target: 'content-script',\n    logMessages,\n    suppressWarnings: !logWarnings\n  });\n  rpc = new Rpc({\n    source: 'page',\n    destination: 'background',\n    logMessages: false,\n    postMessage: windowProxy.postMessage.bind(windowProxy, window)\n  });\n}\n\nexport async function call<RESULT>(method: string, ...params: any[]) {\n  return rpc.call<RESULT>(method, ...params);\n}\n","import { AssetApi } from '../api/asset';\nimport { call } from './proxy';\n\nexport const assetApi: AssetApi = {\n  getAccount() {\n    return call<string>('asset.getAccount');\n  },\n\n  getPublicKey() {\n    return call<string>('asset.getPublicKey');\n  },\n\n  send(args) {\n    return call<string>('asset.send', args);\n  }\n};\n","import { IdentityApi } from '../api/identity';\nimport { TstIdDDO } from '../api/types';\nimport { call } from './proxy';\n\nexport const identityApi: IdentityApi = {\n  getIdentity() {\n    return call<string>('identity.getIdentity');\n  },\n  getDDO(args) {\n    return call<TstIdDDO>('identity.getDDO', args);\n  },\n  addAttributes(args) {\n    return call<void>('identity.addAttributes', args);\n  },\n  removeAttribute(args) {\n    return call<void>('identity.removeAttribute', args);\n  }\n};\n","import { MessageApi } from '../api/message';\nimport { Signature } from '../api/types';\nimport { call } from './proxy';\n\nexport const messageApi: MessageApi = {\n  signMessageHash(args) {\n    return call<Signature>('message.signMessageHash', args);\n  },\n  verifyMessageHash(args) {\n    return call<boolean>('message.verifyMessageHash', args);\n  },\n\n  signMessage(args) {\n    return call<Signature>('message.signMessage', args);\n  },\n  verifyMessage(args) {\n    return call<boolean>('message.verifyMessage', args);\n  }\n};\n","import { NetworkApi } from '../api/network';\nimport { Balance, Block, BlockWithTxList, Contract, GasPrice, MerkleProof, Network, Transaction } from '../api/types';\nimport { call } from './proxy';\n\nexport const networkApi: NetworkApi = {\n  getNodeCount() {\n    return call<number>('network.getNodeCount');\n  },\n\n  getBlockHeight() {\n    return call<number>('network.getBlockHeight');\n  },\n\n  getMerkleProof(args) {\n    return call<MerkleProof>('network.getMerkleProof', args);\n  },\n\n  getStorage(args) {\n    return call<string>('network.getStorage', args);\n  },\n\n  getAllowance(args) {\n    return call<number>('network.getAllowance', args);\n  },\n\n  getBlock(args) {\n    return call<Block>('network.getBlock', args);\n  },\n\n  getTransaction(args) {\n    return call<Transaction>('network.getTransaction', args);\n  },\n\n  getNetwork() {\n    return call<Network>('network.getNetwork');\n  },\n\n  getBalance(args) {\n    return call<Balance>('network.getBalance', args);\n  },\n\n  isConnected() {\n    return call<boolean>('network.isConnected');\n  },\n\n  getUnboundTsg(args) {\n    return call<string>('network.getUnboundTsg', args);\n  },\n  getContract(args) {\n    return call<Contract>('network.getContract', args);\n  },\n  getSmartCodeEvent(args) {\n    return call<any>('network.getSmartCodeEvent', args);\n  },\n  getBlockHeightByTxHash(args) {\n    return call<number>('network.getBlockHeightByTxHash', args);\n  },\n\n  getBlockHash(args) {\n    return call<string>('network.getBlockHash', args);\n  },\n  getBlockTxsByHeight(args) {\n    return call<BlockWithTxList>('network.getBlockTxsByHeight', args);\n  },\n  getGasPrice() {\n    return call<GasPrice>('network.getGasPrice');\n  },\n  getGrantTsg(args) {\n    return call<string>('network.getGrantTsg', args);\n  },\n  getMempoolTxCount() {\n    return call<number[]>('network.getMempoolTxCount');\n  },\n  getMempoolTxState(args) {\n    return call<any>('network.getMempoolTxState', args);\n  },\n  getVersion() {\n    return call<string>('network.getVersion');\n  }\n};\n","import { timeout } from 'promise-timeout';\nimport { ProviderApi } from '../api/provider';\nimport { Provider } from '../api/types';\nimport { call } from './proxy';\n\nexport const providerApi: ProviderApi = {\n  getProvider() {\n    return timeout(call<Provider>('provider.getProvider'), 1000).catch(() => Promise.reject('NO_PROVIDER'));\n  }\n};\n","import { SmartContractApi } from '../api/smartContract';\nimport { Response } from '../api/types';\nimport { call } from './proxy';\n\nexport const smartContractApi: SmartContractApi = {\n  invoke(args) {\n    return call<Response>('smartContract.invoke', args);\n  },\n\n  invokeRead(args): Promise<any> {\n    return call<void>('smartContract.invokeRead', args);\n  },\n\n  deploy(args): Promise<void> {\n    return call<void>('smartContract.deploy', args);\n  },\n  invokeWasm(args) {\n    return call<Response>('smartContract.invokeWasm', args);\n  },\n\n  invokeWasmRead(args): Promise<any> {\n    return call<void>('smartContract.invokeWasmRead', args);\n  }\n};\n","import { StateChannelApi } from '../api/stateChannel';\nimport { Signature } from '../api/types';\nimport { call } from './proxy';\n\nexport const stateChannelApi: StateChannelApi = {\n  login() {\n    return call<string>('stateChannel.login');\n  },\n\n  sign(args) {\n    return call<Signature>('stateChannel.sign', args);\n  }\n};\n","import * as baseX from 'base-x';\nimport * as cryptoJS from 'crypto-js';\n\n/* eslint-disable global-require */\nconst typedarrayToBuffer = require('typedarray-to-buffer');\n/* eslint-enable global-require */\n\nimport { UtilsApi } from '../api/utils';\n\nconst base58 = baseX('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\n\nexport const utilsApi: UtilsApi = {\n  strToHex(str: string) {\n    return ab2hexstring(str2ab(str));\n  },\n\n  hexToStr(hex: string) {\n    return ab2str(hexstring2ab(hex));\n  },\n\n  addressToHex(str: string) {\n    return base58ToHex(str);\n  },\n\n  hexToAddress(str: string) {\n    return hexToBase58(str);\n  },\n\n  isAddress(str: string) {\n    try {\n      base58ToHex(str);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  }\n};\n\nfunction base58ToHex(base58Encoded: string) {\n  const decoded = base58.decode(base58Encoded);\n  const hexEncoded = ab2hexstring(decoded).substr(2, 40);\n\n  if (base58Encoded !== hexToBase58(hexEncoded)) {\n    throw new Error('[addressToU160] decode encoded verify failed');\n  }\n  return hexEncoded;\n}\n\nconst ADDR_VERSION = '17';\n\nfunction hexToBase58(hexEncoded: string): string {\n  const data = ADDR_VERSION + hexEncoded;\n\n  const hash = sha256(data);\n  const hash2 = sha256(hash);\n  const checksum = hash2.slice(0, 8);\n\n  const datas = data + checksum;\n\n  const buffer = typedarrayToBuffer(new Uint8Array(hexstring2ab(datas)));\n\n  return base58.encode(buffer);\n}\n\nfunction sha256(data: string) {\n  const hex = cryptoJS.enc.Hex.parse(data);\n  const sha = cryptoJS.SHA256(hex).toString();\n  return sha;\n}\n\nfunction hexstring2ab(str: string): number[] {\n  const result = [];\n\n  while (str.length >= 2) {\n    result.push(parseInt(str.substring(0, 2), 16));\n    str = str.substring(2, str.length);\n  }\n\n  return result;\n}\n\nfunction ab2hexstring(arr: any): string {\n  let result: string = '';\n  const uint8Arr: Uint8Array = new Uint8Array(arr);\n  for (let i = 0; i < uint8Arr.byteLength; i++) {\n    let str = uint8Arr[i].toString(16);\n    str = str.length === 0 ? '00' : str.length === 1 ? '0' + str : str;\n    result += str;\n  }\n  return result;\n}\n\nfunction ab2str(buf: ArrayBuffer | number[]): string {\n  return String.fromCharCode.apply(null, new Uint8Array(buf));\n}\n\nexport function str2ab(str: string) {\n  const buf = new ArrayBuffer(str.length);\n  const bufView = new Uint8Array(buf);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n","import { DApi } from '../api';\nimport { assetApi as asset } from './asset';\nimport { identityApi as identity } from './identity';\nimport { messageApi as message } from './message';\nimport { networkApi as network } from './network';\nimport { providerApi as provider } from './provider';\nimport { registerClient } from './proxy';\nimport { smartContractApi as smartContract } from './smartContract';\nimport { stateChannelApi as stateChannel } from './stateChannel';\nimport { utilsApi as utils } from './utils';\n\nconst api: DApi = {\n  asset,\n  identity,\n  message,\n  network,\n  provider,\n  smartContract,\n  stateChannel,\n  utils\n};\n\nexport { registerClient, api };\n","import { browser } from 'webextension-polyfill-ts';\nimport { WindowPostMessageProxy } from 'window-post-message-proxy';\nimport { DApi } from './api';\nimport { MethodType, Rpc } from './rpc/rpc';\n\nlet rpc: Rpc;\n\nexport function registerContentProxy({\n  logMessages = false,\n  logWarnings = false\n}: {\n  logMessages?: boolean;\n  logWarnings?: boolean;\n}) {\n  const windowPostMessageProxy = new WindowPostMessageProxy({\n    logMessages,\n    suppressWarnings: !logWarnings,\n    name: 'content-script',\n    target: 'page'\n  });\n\n  windowPostMessageProxy.addHandler({\n    handle: (msg) => browser.runtime.sendMessage(msg),\n    test: (msg) => msg.type === 'dAPI.js' && msg.source === 'page'\n  });\n}\n\nexport function registerProvider({ provider, logMessages }: { provider: DApi; logMessages: boolean }) {\n  rpc = new Rpc({\n    source: 'background',\n    destination: 'page',\n    logMessages,\n    addListener: browser.runtime.onMessage.addListener\n  });\n\n  function checkedRegister(name: string, method: MethodType | undefined) {\n    if (method === undefined) {\n      throw new Error('DApi provider does not implement ' + name);\n    }\n\n    rpc.register(name, method);\n  }\n\n  checkedRegister('asset.getAccount', provider.asset.getAccount);\n  checkedRegister('asset.getPublicKey', provider.asset.getPublicKey);\n  checkedRegister('asset.send', provider.asset.send);\n\n  checkedRegister('identity.getIdentity', provider.identity.getIdentity);\n  checkedRegister('identity.getDDO', provider.identity.getDDO);\n  checkedRegister('identity.addAttributes', provider.identity.addAttributes);\n  checkedRegister('identity.removeAttribute', provider.identity.removeAttribute);\n\n  checkedRegister('message.signMessage', provider.message.signMessage);\n  checkedRegister('message.verifyMessage', provider.message.verifyMessage);\n  checkedRegister('message.signMessageHash', provider.message.signMessageHash);\n  checkedRegister('message.verifyMessageHash', provider.message.verifyMessageHash);\n\n  checkedRegister('network.getAllowance', provider.network.getAllowance);\n  checkedRegister('network.getBalance', provider.network.getBalance);\n  checkedRegister('network.getBlock', provider.network.getBlock);\n  checkedRegister('network.getBlockHeight', provider.network.getBlockHeight);\n  checkedRegister('network.getMerkleProof', provider.network.getMerkleProof);\n  checkedRegister('network.getNetwork', provider.network.getNetwork);\n  checkedRegister('network.getNodeCount', provider.network.getNodeCount);\n  checkedRegister('network.getStorage', provider.network.getStorage);\n  checkedRegister('network.getTransaction', provider.network.getTransaction);\n  checkedRegister('network.isConnected', provider.network.isConnected);\n\n  checkedRegister('network.getUnboundTsg', provider.network.getUnboundTsg);\n  checkedRegister('network.getContract', provider.network.getContract);\n  checkedRegister('network.getSmartCodeEvent', provider.network.getSmartCodeEvent);\n  checkedRegister('network.getBlockHeightByTxHash', provider.network.getBlockHeightByTxHash);\n  checkedRegister('network.getBlockHash', provider.network.getBlockHash);\n  checkedRegister('network.getBlockTxsByHeight', provider.network.getBlockTxsByHeight);\n  checkedRegister('network.getGasPrice', provider.network.getGasPrice);\n  checkedRegister('network.getGrantTsg', provider.network.getGrantTsg);\n  checkedRegister('network.getMempoolTxCount', provider.network.getMempoolTxCount);\n  checkedRegister('network.getMempoolTxState', provider.network.getMempoolTxState);\n  checkedRegister('network.getVersion', provider.network.getVersion);\n\n  checkedRegister('smartContract.invoke', provider.smartContract.invoke);\n  checkedRegister('smartContract.invokeRead', provider.smartContract.invokeRead);\n  checkedRegister('smartContract.deploy', provider.smartContract.deploy);\n  checkedRegister('smartContract.invokeWasm', provider.smartContract.invokeWasm);\n  checkedRegister('smartContract.invokeWasmRead', provider.smartContract.invokeWasmRead);\n\n  checkedRegister('provider.getProvider', provider.provider.getProvider);\n\n  checkedRegister('stateChannel.login', provider.stateChannel.login);\n  checkedRegister('stateChannel.sign', provider.stateChannel.sign);\n}\n","export type NetworkType = 'MAIN' | 'TEST' | 'PRIVATE';\n\nexport type Asset = 'TST' | 'TSG' | string;\n\nexport enum TransactionType {\n  BookKeeper = 2,\n  Claim = 3,\n  Deploy = 208,\n  Invoke = 209,\n  Enrollment = 4,\n  Vote = 5\n}\n\nexport enum VmType  {\n    NEOVM_TYPE = 1,\n    WASMVM_TYPE = 3\n}\n\nexport type EventListener = (data: any) => void;\n\nexport type ParameterType = 'Boolean' | 'Integer' | 'ByteArray' | 'Struct' | 'Map' | 'String' | 'Array' | 'Address';\n\nexport interface Parameter {\n  type: ParameterType;\n  value: any;\n}\n\nexport interface BlockHeader {\n  Version: number;\n  PrevBlockHash: string;\n  TransactionsRoot: string;\n  BlockRoot: string;\n  Timestamp: number;\n  Height: number;\n  ConsensusData: number;\n  ConsensusPayload: string;\n  NextBookkeeper: string;\n  Bookkeepers: string[];\n  SigData: string[];\n  Hash: string;\n}\n\nexport interface Block {\n  Hash: string;\n  Size: number;\n  Header: BlockHeader;\n  Transactions: Transaction[];\n}\n\nexport interface TxSignature {\n  PubKeys: string[];\n  M: number;\n  SigData: string[];\n}\n\nexport interface Transaction {\n  Version: number;\n  Nonce: number;\n  GasPrice: number;\n  GasLimit: number;\n  Payer: string;\n  TxType: TransactionType;\n  Payload: any;\n  Attributes: any[];\n  Sigs: TxSignature[];\n  Hash: string;\n  Height: number;\n}\n\nexport interface MerkleProof {\n  Type: string;\n  TransactionsRoot: string;\n  BlockHeight: number;\n  CurBlockRoot: string;\n  CurBlockHeight: number;\n  TargetHashes: string[];\n}\n\nexport interface Balance {\n  TST: string;\n  TSG: string;\n\n  [key: string]: string;\n}\n\nexport interface TstIdAttribute {\n  key: string;\n  type: string;\n  value: string;\n}\n\nexport interface TstIdDDO {\n  attributes: TstIdAttribute[];\n}\n\nexport interface Provider {\n  name: string;\n  version: string;\n  compatibility: string[];\n}\n\nexport interface Network {\n  type: NetworkType;\n  address: string;\n}\n\nexport type Result = string[];\n\nexport interface Response {\n  transaction: string;\n  results: Result[];\n}\n\nexport interface Signature {\n  publicKey: string;\n  data: string;\n}\n\nexport interface Contract {\n  Code: string;\n  NeedStorage: boolean;\n  Name: string;\n  CodeVersion: string;\n  Author: string;\n  Email: string;\n  Description: string;\n}\n\nexport interface BlockWithTxList {\n  Hash: string;\n  Height: number;\n  Transactions: string[];\n}\n\nexport interface GasPrice {\n  gasPrice: number;\n  height: number;\n}\n","import * as client from './client';\nimport * as provider from './provider';\nimport { MethodType, Rpc } from './rpc/rpc';\nimport { Caller, Tunnel } from './rpc/tunnel';\n\nexport * from './api';\nexport { Caller, client, provider, Tunnel, MethodType, Rpc };\n"],"sourceRoot":""}